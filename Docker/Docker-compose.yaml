version: '3.8'

services:
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpassword
      POSTGRES_DB: testdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  web:
    build:
      context: ./web
      dockerfile: DockerFile
    ports:
      - "8080:8000"
    environment:
      DB_HOST: db
      DB_USER: $USER
      DB_PASSWORD: $PASSWORD
      DB_NAME: $NAME
      APP_ENV: development
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: